#!/usr/bin/perl
use strict;
use warnings;
use 5.014;
use Getopt::Long;

# Not sure whether to handle other models or resultsets, because this script
# will give all permissions to the new user, which is only really useful for
# fb11admin. Plus, FB11AuthDB is the only one we can guarantee is using this
# ACL setup.
my %option = (
    password  => 'password',
    #    model     => 'FB11AuthDB',
    #    resultset => 'User',
);

GetOptions (
    \%option,
    'password|p=s',
    #    'model|m=s',
    #    'resultset|rs=s',
);
my $app = shift;
eval "require $app" or die $@;

my $users = $app->model('FB11AuthDB')->resultset('User');
my $user = $users->find({ username => 'fb11admin' });

unless($user)
{
    $user = $users->create({
        username => 'fb11admin', 
        email    => 'fb11admin@localhost',
        name     => 'Administrator',
        password => $option{password},
    });
}

my $feature_list = $app->fb11_features->feature_list;

for my $section (keys %$feature_list) {
    my $roles = $feature_list->{$section};

    for my $role (keys %$roles) {
        $app->model('FB11AuthDB')->resultset('Aclfeature')->find_or_create({
            feature => $section . '/' . $role
        });
    }
}

my $admin_role = $app->model('FB11AuthDB')->resultset('Role')->find_or_create({
    role => 'Admin'
});

$app->model('FB11AuthDB')->schema->txn_do(sub {
    for my $feature ( $app->model('FB11AuthDB')->resultset('Aclfeature')->all ) {
        $admin_role->add_to_aclfeatures($feature)
            unless $admin_role->aclfeatures->find($feature->id);
    }
});

$user->add_to_roles($admin_role)
    unless $user->roles->find($admin_role->id);

=head1 SYNOPSIS

    init-fb11-auth-db [--password|-p secretpass] MyApp

=head1 DESCRIPTION

Creates a default fb11admin user in the given app, then registers all
C<FB11Feature> features from the application into the Admin role, then gives the
fb11admin user the admin role.

The script may be run multiple times; steps that are not required are not
performed.

=head1 OPTIONS

=head2 --password

=head2 -p

The default password is password because we'd mostly expect you to do this in
dev. Use this to override that.
